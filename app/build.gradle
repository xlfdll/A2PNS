plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

kapt {
    correctErrorTypes = true
}

android {
    compileSdkVersion 31
    buildToolsVersion '32.0.0'
    defaultConfig {
        applicationId "org.xlfdll.a2pns"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 13
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Kotlinx.coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutinesAndroidVersion"

    // Android Jetpack - ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // Android Jetpack - Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    // Gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Epoxy
    implementation "com.airbnb.android:epoxy:$epoxyVersion"
    implementation "com.airbnb.android:epoxy-databinding:$epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"

    // ThreeTenABP (LocalDateTime)
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "300" // or whatever number you want
        }
    }

    implementation "com.budiyev.android:code-scanner:$budiyevCodeScannerVersion"
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(':app:assembleRelease')) {
        String externalData = new File('app/src/main/java/org/xlfdll/a2pns/ExternalData.kt').text

        if (externalData.contains('MockMode = true') || externalData.contains('DebugMode = true')) {
            logger.error('Debug switches must be turned off to build release version.')
            throw new GradleException('Debug switches must be turned off to build release version.')
        }
    }
}
